# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.simple_plugin import SimplePlugin  # noqa: F401,E501
from swagger_server import util


class SimplePlugins(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, plugins: List[SimplePlugin]=None):  # noqa: E501
        """SimplePlugins - a model defined in Swagger

        :param plugins: The plugins of this SimplePlugins.  # noqa: E501
        :type plugins: List[SimplePlugin]
        """
        self.swagger_types = {
            'plugins': List[SimplePlugin]
        }

        self.attribute_map = {
            'plugins': 'plugins'
        }

        self._plugins = plugins

    @classmethod
    def from_dict(cls, dikt) -> 'SimplePlugins':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SimplePlugins of this SimplePlugins.  # noqa: E501
        :rtype: SimplePlugins
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plugins(self) -> List[SimplePlugin]:
        """Gets the plugins of this SimplePlugins.


        :return: The plugins of this SimplePlugins.
        :rtype: List[SimplePlugin]
        """
        return self._plugins

    @plugins.setter
    def plugins(self, plugins: List[SimplePlugin]):
        """Sets the plugins of this SimplePlugins.


        :param plugins: The plugins of this SimplePlugins.
        :type plugins: List[SimplePlugin]
        """

        self._plugins = plugins
